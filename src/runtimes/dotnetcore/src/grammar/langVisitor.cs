//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from grammar/lang.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="langParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IlangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.lang"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLang([NotNull] langParser.LangContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] langParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand([NotNull] langParser.CommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_print([NotNull] langParser.Command_printContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_read([NotNull] langParser.Command_readContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_assign([NotNull] langParser.Command_assignContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_block_func"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_block_func([NotNull] langParser.Command_block_funcContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_call([NotNull] langParser.Command_callContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_block_if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_block_if([NotNull] langParser.Command_block_ifContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_block_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_block_else([NotNull] langParser.Command_block_elseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_block_while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_block_while([NotNull] langParser.Command_block_whileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.command_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_arg([NotNull] langParser.Command_argContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.assign_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssign_arg([NotNull] langParser.Assign_argContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.bool_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBool_arg([NotNull] langParser.Bool_argContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="langParser.math_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMath_arg([NotNull] langParser.Math_argContext context);
}
