import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class Local_trLexer extends Lexer {
    static readonly COMMAND_WRITE = 1;
    static readonly COMMAND_READ = 2;
    static readonly COMMAND_FUNC = 3;
    static readonly COMMAND_CALL = 4;
    static readonly COMMAND_IF = 5;
    static readonly COMMAND_ELSE = 6;
    static readonly COMMAND_WHILE = 7;
    static readonly BOOL_EQ = 8;
    static readonly BOOL_GT = 9;
    static readonly BOOL_LT = 10;
    static readonly BOOL_TRUE = 11;
    static readonly BOOL_FALSE = 12;
    static readonly MUL = 13;
    static readonly DIV = 14;
    static readonly ADD = 15;
    static readonly SUB = 16;
    static readonly VARIABLE = 17;
    static readonly NUMBER = 18;
    static readonly STRING = 19;
    static readonly COMMENT = 20;
    static readonly TEXT = 21;
    static readonly QUOTE = 22;
    static readonly EOL = 23;
    static readonly WS = 24;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
